# Handle body that is json
block parser segateway-otel-body-json() {
    channel {
        parser {
            json-parser(
                prefix(".otel.scopeLog.logRecord.attributes.")
                template("${.otel.log.body}")
            );
        };
        rewrite {
            set('json' value('.otel.com.segway.body.format'));
            set('true' value('.otel.com.segway.body.structured'));
            # unset(value('.otel.log.body'));
            set('t_logscale_otel_body' value('.otel.com.segway.msgtemplate'));
        };    
    };
};
application segateway-otel-body-json[segateway-otel-body] {
    parser { segateway-otel-body-json(); };
};

# Handle body that is json with a message header
block parser segateway-otel-body-msg-json() {
    channel {
        parser {
            regexp-parser(
                template("${.otel.log.body}")
                prefix(".tmp.")
                patterns(
                    '^(?<header>.+)(?<data>{.*})$'
                )
            );
            json-parser(
                prefix(".otel.scopeLog.logRecord.attributes.")
                template("${.tmp.data}")
            );
        };
        rewrite {
            set('msg_json' value('.otel.com.segway.body.format'));
            set('true' value('.otel.com.segway.body.structured'));
            unset(value('.tmp.data'));
            rename(".tmp.header" ".otel.scopeLog.logRecord.attributes.body.header");
            set('t_logscale_otel_head_tail' value('.otel.com.segway.msgtemplate'));
        };  
    };
};
application segateway-otel-body-msg-json[segateway-otel-body] {
    parser { segateway-otel-body-msg-json(); };
};

# Handle body that is json with a message header
block parser segateway-otel-body-msg-kv() {
    channel {
        parser {
            regexp-parser(
                template("${.otel.log.body}")
                prefix(".tmp.")
                patterns(
                    '^(?<header>.+?) *?(?<data>(?:[a-zA-Z0-9\-\_]+=(?:"[^"]+"|[^ ]+)\s?)+.*)'
                )
            );
            kv-parser(
                prefix(".otel.scopeLog.logRecord.attributes.")
                template("${.tmp.data}")
                extract-stray-words-into("tail")
            );
        };
        rewrite {
            set('msg_kv' value('.otel.com.segway.body.format'));
            set('true' value('.otel.com.segway.body.structured'));
            unset(value('.tmp.data'));
            rename(".tmp.header" ".otel.scopeLog.logRecord.attributes.body.header");                
            rename(".tmp.tail" ".otel.scopeLog.logRecord.attributes.body.tail");                
            set('t_logscale_otel_head_tail' value('.otel.com.segway.msgtemplate'));
            set('.otel.scopeLog.logRecord.attributes.body.header' value('.otel.com.segway.msgfield'));
        };    
    };
};
application segateway-otel-body-msg-kv[segateway-otel-body] {
    parser { segateway-otel-body-msg-kv(); };
};